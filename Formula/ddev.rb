# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ddev < Formula
  desc "DDEV"
  homepage "https://github.com/ddev/ddev"
  version "1.23.8-alpha1"
  license "Apache 2"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.8-alpha1/ddev_macos-amd64.v1.23.8-alpha1.tar.gz"
      sha256 "85bf3fb22885d0e8a08514af2ca41ae2303e2cfd7760b84a7e19e8806167253d"

      def install
        if build.head?
            resource("ddev-binary").stage do
              system "unzip", "-o", Dir["*.zip"].first if Dir["*.zip"].any?
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
            end
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
    on_arm do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.8-alpha1/ddev_macos-arm64.v1.23.8-alpha1.tar.gz"
      sha256 "8d364f987c9bedaf7e4d453b1d43a137f29547f54b5107fa8da733eb44baecdd"

      def install
        if build.head?
            resource("ddev-binary").stage do
              system "unzip", "-o", Dir["*.zip"].first if Dir["*.zip"].any?
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
            end
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.8-alpha1/ddev_linux-amd64.v1.23.8-alpha1.tar.gz"
        sha256 "a18019630978427867b50c917385e4234745827d0f8cad4a255fb413d8a0f7a7"

        def install
          if build.head?
              resource("ddev-binary").stage do
                system "unzip", "-o", Dir["*.zip"].first if Dir["*.zip"].any?
                bin.install "ddev"
                bash_completion.install "ddev_bash_completion.sh" => "ddev"
                zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
                fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
              end
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.8-alpha1/ddev_linux-arm64.v1.23.8-alpha1.tar.gz"
        sha256 "f3bae8308b1687c3035db052b0269d6585e76ec54efc244d979e74bdf3b4d823"

        def install
          if build.head?
              resource("ddev-binary").stage do
                system "unzip", "-o", Dir["*.zip"].first if Dir["*.zip"].any?
                bin.install "ddev"
                bash_completion.install "ddev_bash_completion.sh" => "ddev"
                zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
                fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
              end
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
  end

  head do
    url "https://github.com/ddev/ddev.git", branch: "master"

    resource "ddev-binary" do
      arch = Hardware::CPU.arm? ? "arm64" : "amd64"
      os = OS.mac? ? "macos" : "linux"
      url "https://nightly.link/ddev/ddev/workflows/master-build/master/ddev-#{os}-#{arch}.zip"
      sha256 "" # We'd need to figure out how to handle this for nightlies
    end
  end

  test do
    system "#{bin}/ddev --version"
  end
end
