# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ddev < Formula
  desc "DDEV"
  homepage "https://github.com/ddev-test/ddev"
  version "1.23.9"
  license "Apache 2"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.9/ddev_macos-amd64.v1.23.9.tar.gz"
      sha256 "23c5b339fcb3a8c229e3f1591a38ddc6118820179e313f41e9499307a99f3476"

      def install
        if build.head?
            resource("ddev-binary").stage do
              # First unzip the main artifact
              system "unzip", "-o", "ddev-head-artifacts.zip"

              # Verify checksums
              system "sha256sum", "-c", "checksums.txt"

              # Now get the appropriate inner zipfile based on architecture
              os = OS.mac? ? "macos" : "linux"
              arch = Hardware::CPU.arm? ? "arm64" : "amd64"
              inner_zip = "ddev_#{os}_#{arch}.zip"

              # Unzip the architecture-specific binary and completions
              system "unzip", "-o", inner_zip
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
            end
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
    on_arm do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.9/ddev_macos-arm64.v1.23.9.tar.gz"
      sha256 "7a36b3c40e870f849e7789eaf5dc1bcd7a8239da29dffdad9ec7c3b35f1ac308"

      def install
        if build.head?
            resource("ddev-binary").stage do
              # First unzip the main artifact
              system "unzip", "-o", "ddev-head-artifacts.zip"

              # Verify checksums
              system "sha256sum", "-c", "checksums.txt"

              # Now get the appropriate inner zipfile based on architecture
              os = OS.mac? ? "macos" : "linux"
              arch = Hardware::CPU.arm? ? "arm64" : "amd64"
              inner_zip = "ddev_#{os}_#{arch}.zip"

              # Unzip the architecture-specific binary and completions
              system "unzip", "-o", inner_zip
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
            end
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.9/ddev_linux-amd64.v1.23.9.tar.gz"
        sha256 "885b406713d5059832fbe2c825ceb8163dd95c1c35f54ea6934df33661af1f9a"

        def install
          if build.head?
              resource("ddev-binary").stage do
                # First unzip the main artifact
                system "unzip", "-o", "ddev-head-artifacts.zip"

                # Verify checksums
                system "sha256sum", "-c", "checksums.txt"

                # Now get the appropriate inner zipfile based on architecture
                os = OS.mac? ? "macos" : "linux"
                arch = Hardware::CPU.arm? ? "arm64" : "amd64"
                inner_zip = "ddev_#{os}_#{arch}.zip"

                # Unzip the architecture-specific binary and completions
                system "unzip", "-o", inner_zip
                bin.install "ddev"
                bash_completion.install "ddev_bash_completion.sh" => "ddev"
                zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
                fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
              end
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.9/ddev_linux-arm64.v1.23.9.tar.gz"
        sha256 "6328fb3f70571aa3587060602de9f45cac00f656cd60db6433e81fdf7c174c74"

        def install
          if build.head?
              resource("ddev-binary").stage do
                # First unzip the main artifact
                system "unzip", "-o", "ddev-head-artifacts.zip"

                # Verify checksums
                system "sha256sum", "-c", "checksums.txt"

                # Now get the appropriate inner zipfile based on architecture
                os = OS.mac? ? "macos" : "linux"
                arch = Hardware::CPU.arm? ? "arm64" : "amd64"
                inner_zip = "ddev_#{os}_#{arch}.zip"

                # Unzip the architecture-specific binary and completions
                system "unzip", "-o", inner_zip
                bin.install "ddev"
                bash_completion.install "ddev_bash_completion.sh" => "ddev"
                zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
                fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
              end
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
  end

  head do
    url "https://github.com/ddev-test/ddev.git", branch: "master"

    resource "ddev-binary" do
      url "https://nightly.link/ddev-test/ddev/workflows/master-build/master/ddev-head-artifacts.zip"
      sha256 "" # We'll need to skip checksum verification for nightlies
    end
  end

  test do
    system "#{bin}/ddev --version"
  end
end
