# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ddev < Formula
  desc "DDEV"
  homepage "https://github.com/ddev-test/ddev"
  version "1.23.22"
  license "Apache 2"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.22/ddev_macos-amd64.v1.23.22.tar.gz"
      sha256 "aaa01d89961b60dd309f1c869881f70af9cf656fd336cb897d36638d8b69b57c"

      def install
        if build.head?
            resource("ddev-artifacts").unpack buildpath

            # Get the appropriate inner zipfile based on architecture
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            inner_zip = "ddev_#{os}_#{arch}.zip"

            system "unzip", "-o", inner_zip, "-d", buildpath

            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
    on_arm do
      url "https://github.com/ddev-test/ddev/releases/download/v1.23.22/ddev_macos-arm64.v1.23.22.tar.gz"
      sha256 "c4ceed026a897e31396e1487b0610ed86d4c655a84f32ab7c0ce546e6d5028c4"

      def install
        if build.head?
            resource("ddev-artifacts").unpack buildpath

            # Get the appropriate inner zipfile based on architecture
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            inner_zip = "ddev_#{os}_#{arch}.zip"

            system "unzip", "-o", inner_zip, "-d", buildpath

            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.22/ddev_linux-amd64.v1.23.22.tar.gz"
        sha256 "93a9ae140b4491f096254701b47ccafdf01d4df074baa3a7cb85d24f45e62b2d"

        def install
          if build.head?
              resource("ddev-artifacts").unpack buildpath

              # Get the appropriate inner zipfile based on architecture
              os = OS.mac? ? "darwin" : "linux"
              arch = Hardware::CPU.arm? ? "arm64" : "amd64"
              inner_zip = "ddev_#{os}_#{arch}.zip"

              system "unzip", "-o", inner_zip, "-d", buildpath

              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ddev-test/ddev/releases/download/v1.23.22/ddev_linux-arm64.v1.23.22.tar.gz"
        sha256 "b743ff78bf1eb0736b606f1ccf5224f9ac9a382c28037218334e4d6c75055f28"

        def install
          if build.head?
              resource("ddev-artifacts").unpack buildpath

              # Get the appropriate inner zipfile based on architecture
              os = OS.mac? ? "darwin" : "linux"
              arch = Hardware::CPU.arm? ? "arm64" : "amd64"
              inner_zip = "ddev_#{os}_#{arch}.zip"

              system "unzip", "-o", inner_zip, "-d", buildpath

              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          else
              bin.install "ddev"
              bash_completion.install "ddev_bash_completion.sh" => "ddev"
              zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
              fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
          end
        end
      end
    end
  end

  head do
    url "https://github.com/ddev-test/ddev.git", branch: "master"
    resource "ddev-artifacts" do
      url "https://nightly.link/ddev-test/ddev/workflows/master-build/master/ddev-head-artifacts.zip"
    end
  end

  test do
    system "#{bin}/ddev --version"
  end
end
