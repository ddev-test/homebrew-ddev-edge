# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class DdevEdge < Formula
  desc "DDEV"
  homepage "https://github.com/ddev-test/ddev"
  version "1.99.18"
  license "Apache 2"

  depends_on "mkcert"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ddev-test/ddev/releases/download/v1.99.18/ddev_macos-amd64.v1.99.18.tar.gz"
      sha256 "e8f49d52a002141708cb4cbd6b5aabb70d927a65333197d166ff13b7a81b14b0"

      def install
        if build.head?
            system "sh", "-c", "git fetch --unshallow >/dev/null 2>&1" if File.exist?("#{HOMEBREW_REPOSITORY}/.git/shallow")
            system "sh", "-c", "git fetch --tags -f >/dev/null 2>&1"
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            system "mkdir", "-p", "#{bin}"
            system "make", "build", "completions"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev-hostname", "#{bin}/ddev-hostname"
            bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
            zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bin.install "ddev-hostname"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ddev-test/ddev/releases/download/v1.99.18/ddev_macos-arm64.v1.99.18.tar.gz"
      sha256 "d1d5bebd9fe5d94d2ed18225f09f9906df6aa84860f7023859266246929d29ee"

      def install
        if build.head?
            system "sh", "-c", "git fetch --unshallow >/dev/null 2>&1" if File.exist?("#{HOMEBREW_REPOSITORY}/.git/shallow")
            system "sh", "-c", "git fetch --tags -f >/dev/null 2>&1"
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            system "mkdir", "-p", "#{bin}"
            system "make", "build", "completions"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev-hostname", "#{bin}/ddev-hostname"
            bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
            zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bin.install "ddev-hostname"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/ddev-test/ddev/releases/download/v1.99.18/ddev_linux-amd64.v1.99.18.tar.gz"
      sha256 "ad56d587605f591c78ed0a2f01ea27013b48261ab7039aedb9aaaca8207ffdfe"
      def install
        if build.head?
            system "sh", "-c", "git fetch --unshallow >/dev/null 2>&1" if File.exist?("#{HOMEBREW_REPOSITORY}/.git/shallow")
            system "sh", "-c", "git fetch --tags -f >/dev/null 2>&1"
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            system "mkdir", "-p", "#{bin}"
            system "make", "build", "completions"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev-hostname", "#{bin}/ddev-hostname"
            bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
            zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bin.install "ddev-hostname"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/ddev-test/ddev/releases/download/v1.99.18/ddev_linux-arm64.v1.99.18.tar.gz"
      sha256 "808dde47a1a99a801be1db65eb1feb91d2f29f30ebe6e5442542fc93613fdb1d"
      def install
        if build.head?
            system "sh", "-c", "git fetch --unshallow >/dev/null 2>&1" if File.exist?("#{HOMEBREW_REPOSITORY}/.git/shallow")
            system "sh", "-c", "git fetch --tags -f >/dev/null 2>&1"
            os = OS.mac? ? "darwin" : "linux"
            arch = Hardware::CPU.arm? ? "arm64" : "amd64"
            system "mkdir", "-p", "#{bin}"
            system "make", "build", "completions"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
            system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev-hostname", "#{bin}/ddev-hostname"
            bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
            zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
        else
            bin.install "ddev"
            bin.install "ddev-hostname"
            bash_completion.install "ddev_bash_completion.sh" => "ddev"
            zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
            fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
        end
      end
    end
  end

  head do
    url "https://github.com/ddev-test/ddev.git", branch: "main"
    depends_on "go" => :build
    depends_on "make" => :build
  end
  # fail fast if tapped under the old drud or rfay names
  def initialize(*args, **kwargs)
    super(*args, **kwargs)
    if ["drud/homebrew-ddev", "drud/homebrew-ddev-edge", "ddev-test/homebrew-ddev-edge", "rfay/homebrew-ddev-edge"].include?(tap&.full_name)
      odie <<~EOS
        ERROR: your homebrew tap is the ancient #{tap.full_name},
        but that repository has moved.
        Please run:
          rm -rf "$(brew --repo #{tap.full_name})"
          brew uninstall -f ddev ddev-edge
          brew install ddev/ddev-edge/ddev-edge
      EOS
    end
  end

  test do
    system "#{bin}/ddev --version"
  end
end
